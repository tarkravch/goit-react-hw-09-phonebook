{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Container/Container.js","components/Container/Container.module.css","components/Navigation.js","img/default-avatar.svg","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","editContactRequest","editContactSuccess","editContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterByName","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","console","log","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","Container","children","className","styles","container","module","exports","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","to","exact","style","activeStyle","alignItems","avatar","marginRight","btn","width","height","fontFamily","fontSize","lineHeight","fontStyle","border","borderRadius","backgroundColor","cursor","boxShadow","UserMenu","useDispatch","onLogout","useCallback","authOperations","src","defaultAvatar","alt","Button","type","onClick","variant","AuthNav","header","justifyContent","borderBottom","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","items","action","map","contact","id","filter","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.674a94a6.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const editContactRequest = createAction(\"contacts/editContactRequest\");\r\nexport const editContactSuccess = createAction(\"contacts/editContactSuccess\");\r\nexport const editContactError = createAction(\"contacts/editContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const filterByName = createAction(\"contacts/filterByName\");\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = (credentials) => async (dispatch) => {\r\n  console.log(credentials);\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  // якщо локал сторидж наповнений токеном, то є рендер\r\n  // те саме, що state.auth.token\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\n\r\nconst getUsername = (state) => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"../Container/Container.module.css\";\r\nconst Container = ({ children }) => (\r\n  <>{<div className={styles.container}>{children}</div>}</>\r\n);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2uBDo\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"var(--btn-color)\",\r\n  },\r\n};\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          style={styles.link}\r\n          activeStyle={styles.activeLink}\r\n        >\r\n          Phonebook\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.b83fc38f.svg\";","import React, { useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authSelectors, authOperations } from \"../redux/auth\";\r\nimport defaultAvatar from \"../img/default-avatar.svg\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n  btn: {\r\n    display: \"inline-block\",\r\n    width: 60,\r\n    height: \"auto\",\r\n    fontFamily: \"Ubuntu\",\r\n    fontSize: 16,\r\n    lineHeight: 1.2,\r\n    fontStyle: \"normal\",\r\n    fontWeight: 700,\r\n    color: \"black\",\r\n    border: \"2px solid var(--btn-color)\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"var(--btn-color)\",\r\n    padding: 5,\r\n    cursor: \"pointer\",\r\n    boxShadow: \"11px 10px 21px 0px rgba(34, 60, 80, 0.2)\",\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  // const onLogout = () => dispatch(authOperations.logOut());\r\n  const onLogout = useCallback(\r\n    () => dispatch(authOperations.logOut()),\r\n    [dispatch]\r\n  );\r\n  return (\r\n    <div style={styles.container}>\r\n      <img src={defaultAvatar} alt={name} width=\"32\" style={styles.avatar} />\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n      <Button\r\n        type=\"button\"\r\n        onClick={onLogout}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"var(--btn-color)\",\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Registration\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst styles = {\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    borderBottom: \"1px solid var(--btn-color)\",\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nexport default function PrivateRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /\r\n * - В противном случае рендерит компонент\r\n */\r\nexport default function PublicRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { useEffect, Suspense, lazy } from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport AppBar from \"./components/AppBar\";\nimport Container from \"./components/Container/Container\";\nimport { authOperations } from \"./redux/auth\";\nimport { useDispatch } from \"react-redux\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => { /* instead of componentDidMount */\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/\">\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/\">\n            <LoginView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import initialContacts from \"../../components/contactArr.json\";\r\nimport {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  editContactSuccess,\r\n  editContactRequest,\r\n  editContactError,\r\n  filterByName,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, action) => action.payload,\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [editContactSuccess]: (state, { payload }) =>\r\n    state.map((contact) => (contact.id === payload.id ? payload : contact)),\r\n  [deleteContactSuccess]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterByName]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => false,\r\n  [fetchContactSuccess]: () => true,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => false,\r\n  [addContactSuccess]: () => true,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => false,\r\n  [deleteContactSuccess]: () => true,\r\n  [deleteContactError]: () => false,\r\n  [editContactRequest]: () => false,\r\n  [editContactSuccess]: () => false,\r\n  [editContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","// import logger from \"redux-logger\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { authReducer } from \"./auth\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"../src/main-styles/variables.css\";\nimport \"../src/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
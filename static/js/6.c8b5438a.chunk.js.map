{"version":3,"sources":["views/RegisterView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","color","btn","minWidth","height","fontFamily","fontSize","lineHeight","fontStyle","fontWeight","border","borderRadius","backgroundColor","padding","cursor","boxShadow","RegisterView","dispatch","useDispatch","initialState","name","email","password","useState","user","setUser","handleChange","e","currentTarget","value","prev","onSubmit","preventDefault","authOperations","register","style","autoComplete","type","onChange","variant"],"mappings":"yQAKMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,GACdC,MAAO,oBAETC,IAAK,CACHJ,QAAS,eACTK,SAAU,GACVC,OAAQ,OACRC,WAAY,SACZC,SAAU,GACVC,WAAY,IACZC,UAAW,SACXC,WAAY,IACZR,MAAO,QACPS,OAAQ,6BACRC,aAAc,GACdC,gBAAiB,mBACjBC,QAAS,EACTC,OAAQ,UACRC,UAAW,6CAIA,SAASC,IACtB,IAAMC,EAAWC,cAIXC,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZ,EAAwBC,mBAASJ,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACQL,EAA0BI,EAA1BJ,KAAMC,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SASfI,EAAe,SAACC,GACpB,MAAwBA,EAAEC,cAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACdJ,GAAQ,SAACK,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBV,EAAOS,QAqBxC,OACE,gCACE,+CAEA,uBAAME,SAbW,SAACJ,GACpBA,EAAEK,iBAjBFf,EAASgB,IAAeC,SAAS,CAAEd,OAAMC,QAAOC,cAsBhDG,EAAO,WAAP,cAAWN,KAOqBgB,MAAOzC,EAAOC,KAAMyC,aAAa,MAA/D,UACE,wBAAOD,MAAOzC,EAAOG,MAArB,iBAEE,uBAAOwC,KAAK,OAAOjB,KAAK,OAAOS,MAAOT,EAAMkB,SAAUZ,OAGxD,wBAAOS,MAAOzC,EAAOG,MAArB,kBAEE,uBACEwC,KAAK,QACLjB,KAAK,QACLS,MAAOR,EACPiB,SAAUZ,OAId,wBAAOS,MAAOzC,EAAOG,MAArB,qBAEE,uBACEwC,KAAK,WACLjB,KAAK,WACLS,MAAOP,EACPgB,SAAUZ,OAId,cAAC,IAAD,CAC2BW,KAAK,SAC9BE,QAAQ,YACRtC,MAAM,UAHR","file":"static/js/6.c8b5438a.chunk.js","sourcesContent":["import React, { useState /* useCallback */ } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n    color: \"var(--main-font)\",\r\n  },\r\n  btn: {\r\n    display: \"inline-block\",\r\n    minWidth: 60,\r\n    height: \"auto\",\r\n    fontFamily: \"Ubuntu\",\r\n    fontSize: 16,\r\n    lineHeight: 1.2,\r\n    fontStyle: \"normal\",\r\n    fontWeight: 700,\r\n    color: \"black\",\r\n    border: \"2px solid var(--btn-color)\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"var(--btn-color)\",\r\n    padding: 5,\r\n    cursor: \"pointer\",\r\n    boxShadow: \"11px 10px 21px 0px rgba(34, 60, 80, 0.2)\",\r\n  },\r\n};\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n  /*  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\"); */\r\n  const initialState = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [user, setUser] = useState(initialState);\r\n  const { name, email, password } = user;\r\n\r\n  /*  const onRegister = useCallback(\r\n    () => dispatch(authOperations.register({ name, email, password })),\r\n    [dispatch, name, email, password]\r\n  ); */\r\n  const onRegister = () =>\r\n    dispatch(authOperations.register({ name, email, password }));\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n  /* const handleName = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const handleEmail = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n\r\n  const handlePassword = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  }; */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onRegister();\r\n    /* setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\"); */\r\n    setUser(...initialState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register page</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Name\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <Button\r\n          /* style={styles.btn} */ type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Register\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/LoginView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","color","btn","minWidth","height","fontFamily","fontSize","lineHeight","fontStyle","fontWeight","border","borderRadius","backgroundColor","padding","cursor","boxShadow","LoginView","dispatch","useDispatch","initialState","email","password","useState","user","setUser","onLogin","useCallback","authOperations","logIn","handleChange","e","currentTarget","name","value","prev","onSubmit","preventDefault","style","autoComplete","type","onChange","variant"],"mappings":"iQAKMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,GACdC,MAAO,oBAETC,IAAK,CACHJ,QAAS,eACTK,SAAU,GACVC,OAAQ,OACRC,WAAY,SACZC,SAAU,GACVC,WAAY,IACZC,UAAW,SACXC,WAAY,IACZR,MAAO,QACPS,OAAQ,6BACRC,aAAc,GACdC,gBAAiB,mBACjBC,QAAS,EACTC,OAAQ,UACRC,UAAW,2CACX,UAAW,CACTd,MAAO,qBACPW,gBAAiB,oBACjBF,OAAQ,iCAKC,SAASM,IACtB,IAAMC,EAAWC,cAGXC,EAAe,CACnBC,MAAO,GACPC,SAAU,IAEZ,EAAwBC,mBAASH,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KACQJ,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SACTI,EAAUC,uBACd,kBAAMT,EAASU,IAAeC,MAAM,CAAER,QAAOC,gBAC7C,CAACJ,EAAUG,EAAOC,IAIdQ,EAAe,SAACC,GACpB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdT,GAAQ,SAACU,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAOC,QAexC,OACE,gCACE,6CACA,uBAAME,SAXW,SAACL,GACpBA,EAAEM,iBACFX,IAGAD,EAAQ,eAAKL,KAMmBkB,MAAO3C,EAAOC,KAAM2C,aAAa,MAA/D,UACE,wBAAOD,MAAO3C,EAAOG,MAArB,kBAEE,uBACE0C,KAAK,QACLP,KAAK,QACLC,MAAOb,EACPoB,SAAUX,OAGd,wBAAOQ,MAAO3C,EAAOG,MAArB,qBAEE,uBACE0C,KAAK,WACLP,KAAK,WACLC,MAAOZ,EACPmB,SAAUX,OAGd,cAAC,IAAD,CAC2BU,KAAK,SAC9BE,QAAQ,YACRxC,MAAM,UAHR","file":"static/js/5.e2ed51e6.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n    color: \"var(--main-font)\",\r\n  },\r\n  btn: {\r\n    display: \"inline-block\",\r\n    minWidth: 60,\r\n    height: \"auto\",\r\n    fontFamily: \"Ubuntu\",\r\n    fontSize: 16,\r\n    lineHeight: 1.2,\r\n    fontStyle: \"normal\",\r\n    fontWeight: 700,\r\n    color: \"black\",\r\n    border: \"2px solid var(--btn-color)\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"var(--btn-color)\",\r\n    padding: 5,\r\n    cursor: \"pointer\",\r\n    boxShadow: \"11px 10px 21px 0px rgba(34, 60, 80, 0.2)\",\r\n    \"&:hover\": {\r\n      color: \"var(--color-black)\",\r\n      backgroundColor: \"var(--list-color)\",\r\n      border: \"2px solid var(--list-color)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  /* const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\"); */\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [user, setUser] = useState(initialState);\r\n  const { email, password } = user;\r\n  const onLogin = useCallback(\r\n    () => dispatch(authOperations.logIn({ email, password })),\r\n    [dispatch, email, password]\r\n  );\r\n  // const onLogin = () => dispatch(authOperations.logIn({ email, password }));\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  /*  const handlePassword = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onLogin();\r\n    /* setEmail(\"\");\r\n    setPassword(\"\"); */\r\n    setUser({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Log in page</h1>\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label style={styles.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <Button\r\n          /* style={styles.btn} */ type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}